{
    "sourceFile": "src/App.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1749048459898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749048469820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n function App() {\n   const [count, setCount] = useState(0)\n \n   return (\n-    \n+    <div>\n+      Done, I guess\n+    </div>\n   )\n }\n \n export default App\n"
                },
                {
                    "date": 1749048475470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [count, setCount] = useState(0)\n \n   return (\n     <div>\n-      Done, I guess\n+      Done, I guess..\n     </div>\n   )\n }\n \n"
                },
                {
                    "date": 1749048485277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [count, setCount] = useState(0)\n \n   return (\n     <div>\n-      Done, I guess..\n+      <div>Done, I guess..</div>\n     </div>\n   )\n }\n \n"
                },
                {
                    "date": 1749048495759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n function App() {\n   const [count, setCount] = useState(0)\n \n   return (\n-    <div>\n+    <div className='flex flex-col '>\n       <div>Done, I guess..</div>\n     </div>\n   )\n }\n"
                },
                {
                    "date": 1749048507447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n function App() {\n   const [count, setCount] = useState(0)\n \n   return (\n-    <div className='flex flex-col '>\n+    <div className='flex flex-col justify-center items-center'>\n       <div>Done, I guess..</div>\n     </div>\n   )\n }\n"
                },
                {
                    "date": 1749048741288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { useState } from 'react'\n import reactLogo from './assets/react.svg'\n import viteLogo from '/vite.svg'\n-import './App.css'\n \n function App() {\n   const [count, setCount] = useState(0)\n \n"
                },
                {
                    "date": 1749048756848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n function App() {\n   const [count, setCount] = useState(0)\n \n   return (\n-    <div className='flex flex-col justify-center items-center'>\n+    <div className='min-h-screen flex flex-col justify-center items-center'>\n       <div>Done, I guess..</div>\n     </div>\n   )\n }\n"
                },
                {
                    "date": 1749050085117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,36 @@\n-import { useState } from 'react'\n-import reactLogo from './assets/react.svg'\n-import viteLogo from '/vite.svg'\n+import React, { useEffect, useState } from 'react';\n \n function App() {\n-  const [count, setCount] = useState(0)\n+  const [sensorData, setSensorData] = useState({\n+    temperature: 0,\n+    humidity: 0,\n+    rain: 0,\n+    distance: 0,\n+  });\n \n+  useEffect(() => {\n+    const fetchData = () => {\n+      fetch('http://192.168.137.222/sensor')  // Replace with ESP32 IP\n+        .then(res => res.json())\n+        .then(data => setSensorData(data))\n+        .catch(err => console.error(\"Fetch error:\", err));\n+    };\n+\n+    fetchData(); // first call\n+    const interval = setInterval(fetchData, 2000); // every 2s\n+\n+    return () => clearInterval(interval);\n+  }, []);\n+\n   return (\n-    <div className='min-h-screen flex flex-col justify-center items-center'>\n-      <div>Done, I guess..</div>\n+    <div style={{ padding: 20 }}>\n+      <h1>Flood Detection Dashboard</h1>\n+      <p><strong>Temperature:</strong> {sensorData.temperature} ¬∞C</p>\n+      <p><strong>Humidity:</strong> {sensorData.humidity} %</p>\n+      <p><strong>Distance:</strong> {sensorData.distance} cm</p>\n+      <p><strong>Rain Detected:</strong> {sensorData.rain === 0 ? \"YES\" : \"NO\"}</p>\n     </div>\n-  )\n+  );\n }\n \n-export default App\n+export default App;\n"
                },
                {
                    "date": 1749052157521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import React, { useEffect, useState } from 'react';\n+import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n+import 'react-circular-progressbar/dist/styles.css';\n+import { FaTint, FaThermometerHalf, FaCloudRain, FaRulerVertical } from 'react-icons/fa';\n \n function App() {\n   const [sensorData, setSensorData] = useState({\n     temperature: 0,\n@@ -9,28 +12,105 @@\n   });\n \n   useEffect(() => {\n     const fetchData = () => {\n-      fetch('http://192.168.137.222/sensor')  // Replace with ESP32 IP\n+      fetch('http://192.168.137.222/sensor')\n         .then(res => res.json())\n         .then(data => setSensorData(data))\n         .catch(err => console.error(\"Fetch error:\", err));\n     };\n \n-    fetchData(); // first call\n-    const interval = setInterval(fetchData, 2000); // every 2s\n-\n+    fetchData();\n+    const interval = setInterval(fetchData, 2000);\n     return () => clearInterval(interval);\n   }, []);\n \n   return (\n-    <div style={{ padding: 20 }}>\n-      <h1>Flood Detection Dashboard</h1>\n-      <p><strong>Temperature:</strong> {sensorData.temperature} ¬∞C</p>\n-      <p><strong>Humidity:</strong> {sensorData.humidity} %</p>\n-      <p><strong>Distance:</strong> {sensorData.distance} cm</p>\n-      <p><strong>Rain Detected:</strong> {sensorData.rain === 0 ? \"YES\" : \"NO\"}</p>\n+    <div style={styles.container}>\n+      <h1 style={styles.title}>üåßÔ∏è Flood Detection Dashboard</h1>\n+\n+      <div style={styles.cardContainer}>\n+        {/* Temperature Gauge */}\n+        <div style={styles.card}>\n+          <FaThermometerHalf size={24} color=\"#ff4d4f\" />\n+          <h3>Temperature</h3>\n+          <div style={{ width: 100 }}>\n+            <CircularProgressbar\n+              value={sensorData.temperature}\n+              maxValue={60}\n+              text={`${sensorData.temperature}¬∞C`}\n+              styles={buildStyles({\n+                pathColor: \"#ff4d4f\",\n+                textColor: \"#ff4d4f\",\n+                trailColor: \"#ffeaea\",\n+              })}\n+            />\n+          </div>\n+        </div>\n+\n+        {/* Humidity Gauge */}\n+        <div style={styles.card}>\n+          <FaTint size={24} color=\"#1890ff\" />\n+          <h3>Humidity</h3>\n+          <div style={{ width: 100 }}>\n+            <CircularProgressbar\n+              value={sensorData.humidity}\n+              maxValue={100}\n+              text={`${sensorData.humidity}%`}\n+              styles={buildStyles({\n+                pathColor: \"#1890ff\",\n+                textColor: \"#1890ff\",\n+                trailColor: \"#e6f7ff\",\n+              })}\n+            />\n+          </div>\n+        </div>\n+\n+        {/* Rain Detection */}\n+        <div style={styles.card}>\n+          <FaCloudRain size={24} color={sensorData.rain === 0 ? \"blue\" : \"gray\"} />\n+          <h3>Rain</h3>\n+          <p style={{ fontSize: 20 }}>\n+            {sensorData.rain === 0 ? \"‚òî Yes\" : \"üå§Ô∏è No\"}\n+          </p>\n+        </div>\n+\n+        {/* Distance */}\n+        <div style={styles.card}>\n+          <FaRulerVertical size={24} color=\"#52c41a\" />\n+          <h3>Water Level</h3>\n+          <p style={{ fontSize: 20 }}>{sensorData.distance} cm</p>\n+        </div>\n+      </div>\n     </div>\n   );\n }\n \n+const styles = {\n+  container: {\n+    fontFamily: 'Arial, sans-serif',\n+    padding: '20px',\n+    textAlign: 'center',\n+    background: '#f0f2f5',\n+    minHeight: '100vh',\n+  },\n+  title: {\n+    color: '#001529',\n+    marginBottom: 30,\n+  },\n+  cardContainer: {\n+    display: 'flex',\n+    flexWrap: 'wrap',\n+    justifyContent: 'center',\n+    gap: 30,\n+  },\n+  card: {\n+    background: '#fff',\n+    borderRadius: 12,\n+    padding: 20,\n+    width: 200,\n+    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n+    textAlign: 'center',\n+  },\n+};\n+\n export default App;\n"
                },
                {
                    "date": 1749052284069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,92 +25,100 @@\n   }, []);\n \n   return (\n     <div style={styles.container}>\n-      <h1 style={styles.title}>üåßÔ∏è Flood Detection Dashboard</h1>\n+      <h1 style={styles.title}>üåä Flood Detection Dashboard</h1>\n \n       <div style={styles.cardContainer}>\n         {/* Temperature Gauge */}\n         <div style={styles.card}>\n-          <FaThermometerHalf size={24} color=\"#ff4d4f\" />\n-          <h3>Temperature</h3>\n-          <div style={{ width: 100 }}>\n+          <FaThermometerHalf size={36} color=\"#ff4d4f\" />\n+          <h2>Temperature</h2>\n+          <div style={{ width: 140, margin: '0 auto' }}>\n             <CircularProgressbar\n               value={sensorData.temperature}\n               maxValue={60}\n               text={`${sensorData.temperature}¬∞C`}\n               styles={buildStyles({\n                 pathColor: \"#ff4d4f\",\n                 textColor: \"#ff4d4f\",\n                 trailColor: \"#ffeaea\",\n+                textSize: \"16px\",\n               })}\n             />\n           </div>\n         </div>\n \n         {/* Humidity Gauge */}\n         <div style={styles.card}>\n-          <FaTint size={24} color=\"#1890ff\" />\n-          <h3>Humidity</h3>\n-          <div style={{ width: 100 }}>\n+          <FaTint size={36} color=\"#1890ff\" />\n+          <h2>Humidity</h2>\n+          <div style={{ width: 140, margin: '0 auto' }}>\n             <CircularProgressbar\n               value={sensorData.humidity}\n               maxValue={100}\n               text={`${sensorData.humidity}%`}\n               styles={buildStyles({\n                 pathColor: \"#1890ff\",\n                 textColor: \"#1890ff\",\n                 trailColor: \"#e6f7ff\",\n+                textSize: \"16px\",\n               })}\n             />\n           </div>\n         </div>\n \n         {/* Rain Detection */}\n         <div style={styles.card}>\n-          <FaCloudRain size={24} color={sensorData.rain === 0 ? \"blue\" : \"gray\"} />\n-          <h3>Rain</h3>\n-          <p style={{ fontSize: 20 }}>\n+          <FaCloudRain size={36} color={sensorData.rain === 0 ? \"blue\" : \"gray\"} />\n+          <h2>Rain</h2>\n+          <p style={styles.valueText}>\n             {sensorData.rain === 0 ? \"‚òî Yes\" : \"üå§Ô∏è No\"}\n           </p>\n         </div>\n \n         {/* Distance */}\n         <div style={styles.card}>\n-          <FaRulerVertical size={24} color=\"#52c41a\" />\n-          <h3>Water Level</h3>\n-          <p style={{ fontSize: 20 }}>{sensorData.distance} cm</p>\n+          <FaRulerVertical size={36} color=\"#52c41a\" />\n+          <h2>Water Level</h2>\n+          <p style={styles.valueText}>{sensorData.distance} cm</p>\n         </div>\n       </div>\n     </div>\n   );\n }\n \n const styles = {\n   container: {\n-    fontFamily: 'Arial, sans-serif',\n-    padding: '20px',\n-    textAlign: 'center',\n+    fontFamily: 'Segoe UI, sans-serif',\n+    padding: '40px 60px',\n     background: '#f0f2f5',\n     minHeight: '100vh',\n   },\n   title: {\n+    fontSize: '36px',\n+    fontWeight: 700,\n     color: '#001529',\n-    marginBottom: 30,\n+    marginBottom: 50,\n+    textAlign: 'center',\n   },\n   cardContainer: {\n-    display: 'flex',\n-    flexWrap: 'wrap',\n+    display: 'grid',\n+    gridTemplateColumns: 'repeat(auto-fit, minmax(260px, 1fr))',\n+    gap: '40px',\n     justifyContent: 'center',\n-    gap: 30,\n   },\n   card: {\n     background: '#fff',\n-    borderRadius: 12,\n-    padding: 20,\n-    width: 200,\n-    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n+    borderRadius: 16,\n+    padding: 30,\n+    boxShadow: '0 6px 18px rgba(0,0,0,0.1)',\n     textAlign: 'center',\n   },\n+  valueText: {\n+    fontSize: '24px',\n+    fontWeight: 600,\n+    marginTop: 20,\n+  },\n };\n \n export default App;\n"
                }
            ],
            "date": 1749048459898,
            "name": "Commit-0",
            "content": "import { useState } from 'react'\nimport reactLogo from './assets/react.svg'\nimport viteLogo from '/vite.svg'\nimport './App.css'\n\nfunction App() {\n  const [count, setCount] = useState(0)\n\n  return (\n    \n  )\n}\n\nexport default App\n"
        }
    ]
}